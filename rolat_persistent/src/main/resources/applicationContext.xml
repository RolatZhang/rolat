<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                     http://www.springframework.org/schema/context
                     http://www.springframework.org/schema/context/spring-context-3.0.xsd
                     http://www.springframework.org/schema/aop
                     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                     http://www.springframework.org/schema/tx
                     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:annotation-config />

	<context:component-scan base-package="rolat.repository">
	</context:component-scan>


	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
		<!--驱动的名称我用的mysql 所以配置的mysql的驱动名称  -->
		<property name="url" value="jdbc:dm://192.168.202.123:5236/TMR" />
		<property name="driverClassName" value="dm.jdbc.driver.DmDriver" />
		<!--数据库用户名名称  -->
		<property name="username" value="TMR" />
		<!--数据库的密码 我本地的密码空 所以不用配置  -->
		<property name="password" value="tmr" />
		<!--  数据库连接池启动时创建的连接数量 我设置的是10个-->
		<property name="initialSize" value="10" />
		<!-- 池里不会被释放的最多空闲连接数量。设置为0时表示无限制。 -->
		<property name="maxIdle" value="5" />
		<!-- 在不新建连接的条件下，池中保持空闲的最少连接数。 -->
		<property name="minIdle" value="5" />
		<!--同一时间可以从池分配的最多连接数量。设置为0时表示无限制。  -->
		<property name="maxActive" value="10" />
		<!--  -->
		<property name="removeAbandoned" value="true" />
		<!-- 自动回收超时时间(以秒数为单位) -->
		<property name="removeAbandonedTimeout" value="180" />
		<!--超时等待时间以毫秒为单位-->
		<property name="maxWait" value="3000" />
		<!-- 默认的SQL语句自动提交状态(开启或关闭)设置由连接池本身设置(false由连接池定)，不设置该值setAutoCommit方法不被调用； -->
		<property name="defaultAutoCommit" value="false" />
		<!--要求必需是个SELECT类型的SQL语句，至少返回一行，由于它会在所有应用的SQL语句执行之前运行一次，
                  所以原则上应该对数据库服务器带来的压力越小越好，推荐使用“SELECT 1”  -->
		<property name="validationQuery">
			<value>SELECT 1</value>
		</property>
		<!-- 表示从连接池中获取连接前是否运行validationQuery，true=运行[默认]，false=不运行 -->
		<property name="testOnBorrow">
			<value>true</value>
		</property>
		<!--表示将连接归还连接池前是否运行validationQuery，true=运行，false=不运行[默认]；  -->
		<property name="testOnReturn">
			<value>false</value>
		</property>
	</bean>

	<bean id="sessionFactory"
		  class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<!--
			value可以通过 ',' 隔开多个配置文件， 如：classpath:a.cfg.xml,classpath:b.cfg.xml
		-->
		<property name="configLocations">
			<value>classpath:hibernate.cfg.xml</value>

		</property>
	</bean>
	<bean id="daoSupportService" class="com.dlptech.swap.DaoSupportService">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>


	<bean id="transactionManager"
		  class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"	 />
</beans>